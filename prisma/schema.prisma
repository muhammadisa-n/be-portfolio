generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
  output        = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  fullName   String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  password   String    @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)

  @@map("users")
}

model Tool {
  id               Int              @id @default(autoincrement())
  name             String           @db.VarChar(100)
  description      String           @db.VarChar(100)
  image_id         String           @db.VarChar(200)
  image_url        String           @db.VarChar(300)
  tool_url         String           @db.VarChar(100)
  dad              Int
  created_at       DateTime         @default(now()) @db.Timestamp(0)
  updated_at       DateTime         @updatedAt @db.Timestamp(0)
  deleted_at       DateTime?        @db.Timestamp(0)
  project_has_tool ProjectHasTool[]

  @@map("tools")
}

model Project {
  id               Int              @id @default(autoincrement())
  name             String           @db.VarChar(100)
  description      String           @db.Text()
  image_id         String           @db.VarChar(200)
  image_url        String           @db.VarChar(300)
  demo_url         String           @db.VarChar(100)
  project_url      String           @db.VarChar(100)
  dad              Int
  created_at       DateTime         @default(now()) @db.Timestamp(0)
  updated_at       DateTime         @updatedAt @db.Timestamp(0)
  deleted_at       DateTime?        @db.Timestamp(0)
  project_has_tool ProjectHasTool[]

  @@map("projects")
}

model ProjectHasTool {
  project_id Int
  tool_id    Int
  project    Project @relation(fields: [project_id], references: [id], onDelete: Cascade)
  tool       Tool    @relation(fields: [tool_id], references: [id], onDelete: Cascade)

  @@unique([project_id, tool_id])
  @@map("project_has_tools")
}

model Message {
  id         String    @id @default(uuid())
  fullName   String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  message    String    @db.Text()
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)

  @@map("messages")
}
